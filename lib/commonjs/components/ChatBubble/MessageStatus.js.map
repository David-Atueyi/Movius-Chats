{"version":3,"file":"MessageStatus.js","sources":["../../../../src/components/ChatBubble/MessageStatus.tsx"],"sourcesContent":["import React from 'react';\nimport { Text, View } from 'react-native';\nimport tw from 'twrnc';\nimport { CheckAllIcon } from '../../assets/Icons/CheckAllIcon';\nimport { CheckIcon } from '../../assets/Icons/CheckIcon';\nimport { useChatContext } from '../../context/ChatContext';\nimport { MessageStatusProps } from './types';\n\nconst MessageStatus: React.FC<MessageStatusProps> = ({\n  time,\n  status,\n  isCurrentUser,\n  hasText,\n  hasAudio,\n}) => {\n  const { theme, showMessageStatus } = useChatContext();\n  return (\n    <>\n      {showMessageStatus && (\n        <View\n          style={[\n            tw`flex-row items-center`,\n            hasText\n              ? tw`justify-end pb-1 ml-4`\n              : hasAudio\n                ? tw`absolute right-3 bottom-3`\n                : tw`absolute right-3 bottom-4 bg-black/50 px-2 py-1 rounded-md`,\n          ]}\n        >\n          <Text\n            style={[\n              tw`text-xs`,\n              {\n                color:\n                  hasText || hasAudio\n                    ? theme?.colors?.timestamp || 'rgba(107, 114, 128, 0.7)'\n                    : 'white',\n              },\n            ]}\n          >\n            {time}\n          </Text>\n          {isCurrentUser && (\n            <View style={tw`ml-1 flex-row items-center`}>\n              {status === 'sent' && (\n                <CheckIcon\n                  style={tw.style('fill-[#6B7280] h-4 w-4', { opacity: 0.7 })}\n                />\n              )}\n              {status === 'delivered' && (\n                <CheckAllIcon\n                  style={tw.style('fill-[#6B7280] h-4 w-4', { opacity: 0.7 })}\n                />\n              )}\n              {status === 'read' && (\n                <CheckAllIcon\n                  style={tw.style('fill-[#3B82F6] h-4 w-4', { opacity: 0.9 })}\n                />\n              )}\n            </View>\n          )}\n        </View>\n      )}\n    </>\n  );\n};\n\nexport default React.memo(MessageStatus);\n"],"names":["MessageStatus","time","status","isCurrentUser","hasText","hasAudio","theme","showMessageStatus","useChatContext","_jsx","_Fragment","children","_jsxs","jsxs","View","style","tw","jsx","Text","color","colors","timestamp","CheckIcon","opacity","CheckAllIcon","MessageStatus$1","React","memo"],"mappings":"uPAQA,MAAMA,EAA8CA,EAClDC,OACAC,SACAC,gBACAC,UACAC,eAEA,MAAMC,MAAEA,EAAKC,kBAAEA,GAAsBC,mBACrC,OACEC,EAAAA,IAAAC,EAAAA,SAAA,CAAAC,SACGJ,GACCK,EAAAC,KAACC,OAAI,CACHC,MAAO,CACLC,CAAE,wBACFZ,EACIY,CAAE,wBACFX,EACEW,CAAE,4BACFA,CAAE,8DACRL,SAAA,CAEFF,EAAAQ,IAACC,OAAI,CACHH,MAAO,CACLC,CAAE,UACF,CACEG,MACEf,GAAWC,EACPC,GAAOc,QAAQC,WAAa,2BAC5B,UAERV,SAEDV,IAEFE,GACCS,EAAAC,KAACC,OAAI,CAACC,MAAOC,CAAE,6BAA6BL,UAC9B,SAAXT,GACCO,EAAAA,IAACa,EAAAA,UAAS,CACRP,MAAOC,EAAGD,MAAM,yBAA0B,CAAEQ,QAAS,OAG7C,cAAXrB,GACCO,EAAAA,IAACe,EAAAA,aAAY,CACXT,MAAOC,EAAGD,MAAM,yBAA0B,CAAEQ,QAAS,OAG7C,SAAXrB,GACCO,EAAAA,IAACe,EAAAA,aAAY,CACXT,MAAOC,EAAGD,MAAM,yBAA0B,CAAEQ,QAAS,cAOhE,EAIP,IAAAE,EAAeC,EAAMC,KAAK3B"}
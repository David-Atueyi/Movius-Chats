{"version":3,"file":"ChatInput.js","sources":["../../../../src/components/ChatInput/ChatInput.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { Platform, Pressable, TextInput, View } from 'react-native';\nimport tw from 'twrnc';\nimport { CameraIcon } from '../../assets/Icons/CameraIcon';\nimport { EmojiFunnySquareIcon } from '../../assets/Icons/EmojiFunnySquareIcon';\nimport { MicrophoneIcon } from '../../assets/Icons/MicrophoneIcon';\nimport { PaperClipIcon } from '../../assets/Icons/PaperClipIcon';\nimport { PaperPlaneIcon } from '../../assets/Icons/PaperPlaneIcon';\nimport { useChatContext } from '../../context/ChatContext';\nimport FilePreview from './FilePreview';\nimport { ChatInputProps, InputHeightState } from './types';\n\nconst MIN_INPUT_HEIGHT = Platform.OS === 'ios' ? 32 : 30;\nconst MAX_INPUT_HEIGHT = 118;\n\nconst ChatInput: React.FC<ChatInputProps> = ({\n  onSendMessage,\n  onTypingStart,\n  onTypingEnd,\n  onAttachmentPress,\n  onCameraPress,\n  onAudioRecordStart,\n  onAudioRecordEnd,\n  CustomEmojiIcon,\n  CustomAttachmentIcon,\n  CustomCameraIcon,\n  CustomSendIcon,\n  CustomMicrophoneIcon,\n  CustomFileIcon,\n  CustomImagePreview,\n  CustomVideoPreview,\n}) => {\n  const [inputText, setInputText] = useState('');\n  const [inputHeight, setInputHeight] = useState<InputHeightState>({\n    height: MIN_INPUT_HEIGHT,\n    isMultiline: false,\n  });\n  const {\n    theme,\n    currentUserId,\n    showEmojiButton,\n    showAttachmentsButton,\n    showCameraButton,\n    showVoiceRecordButton,\n    placeholder,\n    previewData,\n    closePreview,\n  } = useChatContext();\n\n  const handleContentSizeChange = useCallback(\n    (event: { nativeEvent: { contentSize: { height: number } } }) => {\n      const newHeight = Math.min(\n        Math.max(event.nativeEvent.contentSize.height, MIN_INPUT_HEIGHT),\n        MAX_INPUT_HEIGHT\n      );\n      setInputHeight({\n        height: newHeight,\n        isMultiline: newHeight > MIN_INPUT_HEIGHT,\n      });\n    },\n    []\n  );\n\n  const handleSendMessage = useCallback(() => {\n    const trimmedText = inputText.trim();\n\n    if (!trimmedText && !previewData) {\n      return;\n    }\n\n    onSendMessage({\n      text: trimmedText,\n      senderId: currentUserId,\n    });\n\n    setInputText('');\n    setInputHeight({ height: MIN_INPUT_HEIGHT, isMultiline: false });\n  }, [inputText, onSendMessage, currentUserId, previewData]);\n\n  useEffect(() => {\n    if (inputText.trim()) {\n      onTypingStart?.();\n    } else {\n      onTypingEnd?.();\n    }\n  }, [inputText, onTypingStart, onTypingEnd]);\n\n  return (\n    <View\n      style={[\n        tw`flex-row gap-2`,\n        theme?.inputStyles?.inputSectionContainerStyle,\n      ]}\n    >\n      {/* File Preview above the input */}\n      {previewData && (\n        <FilePreview\n          previewData={previewData}\n          closePreview={closePreview}\n          CustomFileIcon={CustomFileIcon}\n          CustomImagePreview={CustomImagePreview}\n          CustomVideoPreview={CustomVideoPreview}\n        />\n      )}\n      <View\n        style={[\n          tw`flex-1 bg-white px-3.5 gap-1 flex-row justify-between`,\n          inputHeight.isMultiline\n            ? tw`rounded-3xl items-end`\n            : tw`rounded-full items-center`,\n          theme?.inputStyles?.inputContainerStyle,\n        ]}\n      >\n        {showEmojiButton && (\n          <Pressable>\n            {CustomEmojiIcon ? (\n              <CustomEmojiIcon />\n            ) : (\n              <EmojiFunnySquareIcon\n                style={tw.style(\n                  `${Platform.OS === 'ios' ? 'h-6 w-6' : 'w-7 h-7'}`,\n                  inputHeight.isMultiline ? 'pb-14' : 'pb-0'\n                )}\n                color={theme?.colors?.inputsIconsColor || 'rgba(0,0,0,0.7)'}\n              />\n            )}\n          </Pressable>\n        )}\n\n        <TextInput\n          value={inputText}\n          onChangeText={setInputText}\n          placeholder={placeholder || 'Message'}\n          style={[\n            tw`bg-transparent flex-1 pl-2 my-3`,\n            Platform.OS === 'ios' ? tw`text-[17px]` : tw`text-[16px]`,\n            { minHeight: MIN_INPUT_HEIGHT, maxHeight: MAX_INPUT_HEIGHT },\n          ]}\n          placeholderTextColor={\n            theme?.colors?.placeholderTextColor || 'rgba(0, 0, 0, 0.4)'\n          }\n          multiline\n          textAlignVertical=\"center\"\n          onContentSizeChange={handleContentSizeChange}\n        />\n\n        <View\n          style={[\n            tw`gap-4 flex-row`,\n            inputHeight.isMultiline ? tw`pb-4` : tw`pb-0`,\n          ]}\n        >\n          {showAttachmentsButton && (\n            <Pressable onPress={onAttachmentPress}>\n              {CustomAttachmentIcon ? (\n                <CustomAttachmentIcon />\n              ) : (\n                <PaperClipIcon\n                  style={tw.style(\n                    Platform.OS === 'ios' ? 'h-6 w-6' : 'w-7 h-7'\n                  )}\n                  color={theme?.colors?.inputsIconsColor || 'rgba(0,0,0,0.7)'}\n                />\n              )}\n            </Pressable>\n          )}\n          {showCameraButton && !inputText.trim() && (\n            <Pressable onPress={onCameraPress}>\n              {CustomCameraIcon ? (\n                <CustomCameraIcon />\n              ) : (\n                <CameraIcon\n                  style={tw.style(\n                    Platform.OS === 'ios' ? 'h-6 w-6' : 'w-7 h-7'\n                  )}\n                  color={theme?.colors?.inputsIconsColor || 'rgba(0,0,0,0.7)'}\n                />\n              )}\n            </Pressable>\n          )}\n        </View>\n      </View>\n\n      <Pressable\n        style={[\n          tw`p-2 rounded-full bg-green-600 justify-center items-center`,\n          {\n            height: Platform.OS === 'ios' ? 50 : 48,\n            width: Platform.OS === 'ios' ? 50 : 48,\n            ...theme?.inputStyles?.sendButtonStyle,\n          },\n        ]}\n        onPress={\n          inputText.trim() || previewData\n            ? handleSendMessage\n            : onAudioRecordStart\n        }\n        onLongPress={onAudioRecordStart}\n        onPressOut={onAudioRecordEnd}\n      >\n        {inputText.trim() ? (\n          CustomSendIcon ? (\n            <CustomSendIcon />\n          ) : (\n            <PaperPlaneIcon\n              style={tw.style('h-6 w-6')}\n              color={theme?.colors?.sendIconsColor || 'rgba(255,255,255,0.7)'}\n            />\n          )\n        ) : showVoiceRecordButton ? (\n          CustomMicrophoneIcon ? (\n            <CustomMicrophoneIcon />\n          ) : (\n            <MicrophoneIcon\n              style={tw.style('h-8 w-8')}\n              color={theme?.colors?.sendIconsColor || 'rgba(255,255,255,0.7)'}\n            />\n          )\n        ) : CustomSendIcon ? (\n          <CustomSendIcon />\n        ) : (\n          <PaperPlaneIcon\n            style={tw.style('h-6 w-6')}\n            color={theme?.colors?.sendIconsColor || 'rgba(255,255,255,0.7)'}\n          />\n        )}\n      </Pressable>\n    </View>\n  );\n};\n\nexport default React.memo(ChatInput);\n"],"names":["MIN_INPUT_HEIGHT","Platform","OS","ChatInput","onSendMessage","onTypingStart","onTypingEnd","onAttachmentPress","onCameraPress","onAudioRecordStart","onAudioRecordEnd","CustomEmojiIcon","CustomAttachmentIcon","CustomCameraIcon","CustomSendIcon","CustomMicrophoneIcon","CustomFileIcon","CustomImagePreview","CustomVideoPreview","inputText","setInputText","useState","inputHeight","setInputHeight","height","isMultiline","theme","currentUserId","showEmojiButton","showAttachmentsButton","showCameraButton","showVoiceRecordButton","placeholder","previewData","closePreview","useChatContext","handleContentSizeChange","useCallback","event","newHeight","Math","min","max","nativeEvent","contentSize","handleSendMessage","trimmedText","trim","text","senderId","useEffect","_jsxs","View","style","tw","inputStyles","inputSectionContainerStyle","children","_jsx","jsx","FilePreview","jsxs","inputContainerStyle","Pressable","EmojiFunnySquareIcon","color","colors","inputsIconsColor","TextInput","value","onChangeText","minHeight","maxHeight","placeholderTextColor","multiline","textAlignVertical","onContentSizeChange","onPress","PaperClipIcon","CameraIcon","width","sendButtonStyle","onLongPress","onPressOut","PaperPlaneIcon","sendIconsColor","MicrophoneIcon","ChatInput$1","React","memo"],"mappings":"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"}
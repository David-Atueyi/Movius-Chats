{"version":3,"file":"ChatInput.js","sources":["../../../../src/components/ChatInput/ChatInput.tsx"],"sourcesContent":["import { CameraIcon } from \"../../assets/Icons/CameraIcon\";\nimport { EmojiFunnySquareIcon } from \"../../assets/Icons/EmojiFunnySquareIcon\";\nimport { MicrophoneIcon } from \"../../assets/Icons/MicrophoneIcon\";\nimport { PaperClipIcon } from \"../../assets/Icons/PaperClipIcon\";\nimport { PaperPlaneIcon } from \"../../assets/Icons/PaperPlaneIcon\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Platform, Pressable, TextInput, View } from \"react-native\";\nimport { useChatContext } from \"../../context/ChatContext\";\nimport { ChatInputProps, InputHeightState } from \"./types\";\nimport tw from 'twrnc';\n\nconst MIN_INPUT_HEIGHT = Platform.OS === \"ios\" ? 32 : 30;\nconst MAX_INPUT_HEIGHT = 118;\n\nconst ChatInput: React.FC<ChatInputProps> = ({\n  onSendMessage,\n  onTypingStart,\n  onTypingEnd,\n  onAttachmentPress,\n  onCameraPress,\n  onAudioRecordStart,\n  onAudioRecordEnd,\n  CustomEmojiIcon,\n  CustomAttachmentIcon,\n  CustomCameraIcon,\n  CustomSendIcon,\n  CustomMicrophoneIcon,\n}) => {\n  const [inputText, setInputText] = useState(\"\");\n  const [inputHeight, setInputHeight] = useState<InputHeightState>({\n    height: MIN_INPUT_HEIGHT,\n    isMultiline: false,\n  });\n  const {\n    theme,\n    currentUserId,\n    showEmojiButton,\n    showAttachmentsButton,\n    showCameraButton,\n    showVoiceRecordButton,\n    placeholder,\n  } = useChatContext();\n\n  const handleContentSizeChange = useCallback(\n    (event: { nativeEvent: { contentSize: { height: number } } }) => {\n      const newHeight = Math.min(\n        Math.max(event.nativeEvent.contentSize.height, MIN_INPUT_HEIGHT),\n        MAX_INPUT_HEIGHT\n      );\n      setInputHeight({\n        height: newHeight,\n        isMultiline: newHeight > MIN_INPUT_HEIGHT,\n      });\n    },\n    []\n  );\n\n  const handleSendMessage = useCallback(() => {\n    if (inputText.trim()) {\n      onSendMessage({\n        text: inputText.trim(),\n        senderId: currentUserId,\n      });\n      setInputText(\"\");\n      setInputHeight({ height: MIN_INPUT_HEIGHT, isMultiline: false });\n    }\n  }, [inputText, onSendMessage, currentUserId]);\n\n  useEffect(() => {\n    if (inputText.trim()) {\n      onTypingStart?.();\n    } else {\n      onTypingEnd?.();\n    }\n  }, [inputText, onTypingStart, onTypingEnd]);\n\n  return (\n    <View\n      style={[\n        tw`flex-row gap-2`,\n        theme?.inputStyles?.inputSectionContainerStyle,\n      ]}\n    >\n      <View\n        style={[\n          tw`flex-1 bg-white px-3.5 gap-1 flex-row justify-between`,\n          inputHeight.isMultiline\n            ? tw`rounded-3xl items-end`\n            : tw`rounded-full items-center`,\n          theme?.inputStyles?.inputContainerStyle,\n        ]}\n      >\n        {showEmojiButton && (\n          <Pressable>\n            {CustomEmojiIcon ? (\n              <CustomEmojiIcon />\n            ) : (\n              <EmojiFunnySquareIcon\n                style={tw.style(\n                  `${Platform.OS === 'ios' ? 'h-6 w-6' : 'w-7 h-7'}`,\n                  inputHeight.isMultiline ? 'pb-14' : 'pb-0'\n                )}\n                color={theme?.colors?.inputsIconsColor || 'rgba(0,0,0,0.7)'}\n              />\n            )}\n          </Pressable>\n        )}\n\n        <TextInput\n          value={inputText}\n          onChangeText={setInputText}\n          placeholder={placeholder || 'Message'}\n          style={[\n            tw`bg-transparent flex-1 pl-2 my-3`,\n            Platform.OS === 'ios' ? tw`text-[17px]` : tw`text-[16px]`,\n            { minHeight: MIN_INPUT_HEIGHT, maxHeight: MAX_INPUT_HEIGHT },\n          ]}\n          placeholderTextColor={\n            theme?.colors?.placeholderTextColor || 'rgba(0, 0, 0, 0.4)'\n          }\n          multiline\n          textAlignVertical=\"center\"\n          onContentSizeChange={handleContentSizeChange}\n        />\n\n        <View\n          style={[\n            tw`gap-4 flex-row`,\n            inputHeight.isMultiline ? tw`pb-4` : tw`pb-0`,\n          ]}\n        >\n          {showAttachmentsButton && (\n            <Pressable onPress={onAttachmentPress}>\n              {CustomAttachmentIcon ? (\n                <CustomAttachmentIcon />\n              ) : (\n                <PaperClipIcon\n                  style={tw.style(\n                    Platform.OS === 'ios' ? 'h-6 w-6' : 'w-7 h-7'\n                  )}\n                  color={theme?.colors?.inputsIconsColor || 'rgba(0,0,0,0.7)'}\n                />\n              )}\n            </Pressable>\n          )}\n          {showCameraButton && !inputText.trim() && (\n            <Pressable onPress={onCameraPress}>\n              {CustomCameraIcon ? (\n                <CustomCameraIcon />\n              ) : (\n                <CameraIcon\n                  style={tw.style(\n                    Platform.OS === 'ios' ? 'h-6 w-6' : 'w-7 h-7'\n                  )}\n                  color={theme?.colors?.inputsIconsColor || 'rgba(0,0,0,0.7)'}\n                />\n              )}\n            </Pressable>\n          )}\n        </View>\n      </View>\n\n      <Pressable\n        style={[\n          tw`p-2 rounded-full bg-green-600 justify-center items-center`,\n          {\n            height: Platform.OS === 'ios' ? 50 : 48,\n            width: Platform.OS === 'ios' ? 50 : 48,\n            ...theme?.inputStyles?.sendButtonStyle,\n          },\n        ]}\n        onPress={inputText.trim() ? handleSendMessage : onAudioRecordStart}\n        onLongPress={onAudioRecordStart}\n        onPressOut={onAudioRecordEnd}\n      >\n        {inputText.trim() ? (\n          CustomSendIcon ? (\n            <CustomSendIcon />\n          ) : (\n            <PaperPlaneIcon\n              style={tw.style('h-6 w-6')}\n              color={theme?.colors?.sendIconsColor || 'rgba(255,255,255,0.7)'}\n            />\n          )\n        ) : showVoiceRecordButton ? (\n          CustomMicrophoneIcon ? (\n            <CustomMicrophoneIcon />\n          ) : (\n            <MicrophoneIcon\n              style={tw.style('h-8 w-8')}\n              color={theme?.colors?.sendIconsColor || 'rgba(255,255,255,0.7)'}\n            />\n          )\n        ) : CustomSendIcon ? (\n          <CustomSendIcon />\n        ) : (\n          <PaperPlaneIcon\n            style={tw.style('h-6 w-6')}\n            color={theme?.colors?.sendIconsColor || 'rgba(255,255,255,0.7)'}\n          />\n        )}\n      </Pressable>\n    </View>\n  );\n};\n\nexport default React.memo(ChatInput);\n"],"names":["MIN_INPUT_HEIGHT","Platform","OS","ChatInput","onSendMessage","onTypingStart","onTypingEnd","onAttachmentPress","onCameraPress","onAudioRecordStart","onAudioRecordEnd","CustomEmojiIcon","CustomAttachmentIcon","CustomCameraIcon","CustomSendIcon","CustomMicrophoneIcon","inputText","setInputText","useState","inputHeight","setInputHeight","height","isMultiline","theme","currentUserId","showEmojiButton","showAttachmentsButton","showCameraButton","showVoiceRecordButton","placeholder","useChatContext","handleContentSizeChange","useCallback","event","newHeight","Math","min","max","nativeEvent","contentSize","handleSendMessage","trim","text","senderId","useEffect","_jsxs","View","style","tw","inputStyles","inputSectionContainerStyle","children","jsxs","inputContainerStyle","_jsx","jsx","Pressable","EmojiFunnySquareIcon","color","colors","inputsIconsColor","TextInput","value","onChangeText","minHeight","maxHeight","placeholderTextColor","multiline","textAlignVertical","onContentSizeChange","onPress","PaperClipIcon","CameraIcon","width","sendButtonStyle","onLongPress","onPressOut","PaperPlaneIcon","sendIconsColor","MicrophoneIcon","ChatInput$1","React","memo"],"mappings":"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"}
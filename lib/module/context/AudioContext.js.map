{"version":3,"file":"AudioContext.js","sources":["../../../src/context/AudioContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n\ninterface AudioContextType {\n  currentlyPlayingId: string | null;\n  setCurrentlyPlayingId: (id: string | null) => void;\n}\n\nconst AudioContext = createContext<AudioContextType | undefined>(undefined);\n\nexport const AudioProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [currentlyPlayingId, setCurrentlyPlayingId] = useState<string | null>(\n    null\n  );\n\n  return (\n    <AudioContext.Provider value={{ currentlyPlayingId, setCurrentlyPlayingId }}>\n      {children}\n    </AudioContext.Provider>\n  );\n};\n\nexport const useAudio = () => {\n  const context = useContext(AudioContext);\n  if (!context) {\n    throw new Error(\"useAudio must be used within an AudioProvider\");\n  }\n  return context;\n};"],"names":["AudioContext","createContext","undefined","AudioProvider","children","currentlyPlayingId","setCurrentlyPlayingId","useState","_jsx","Provider","value","useAudio","context","useContext","Error"],"mappings":"4GAOA,MAAMA,EAAeC,OAA4CC,GAEpDC,EAAyDA,EACpEC,eAEA,MAAOC,EAAoBC,GAAyBC,EAClD,MAGF,OACEC,EAACR,EAAaS,SAAQ,CAACC,MAAO,CAAEL,qBAAoBC,yBAAwBF,SACzEA,GACqB,EAIfO,EAAWA,KACtB,MAAMC,EAAUC,EAAWb,GAC3B,IAAKY,EACH,MAAM,IAAIE,MAAM,iDAElB,OAAOF,CAAO"}